{
  "version": 3,
  "sources": ["../../src/day01/index.ts"],
  "sourcesContent": ["import run from \"aocrunner\";\n\nconst parseInput = (rawInput: string) => rawInput;\n\nconst part1 = (rawInput: string) => {\n  const input = parseInput(rawInput);\n\n  const lines = input.split(\"\\n\");\n  const numbers = lines.map((line) => {\n    const chars = line.split(\"\");\n    const nums: number[] = []\n\n    chars.forEach(char => {\n      if (!Number.isNaN(parseInt(char))) {\n        nums.push(parseInt(char))\n      }\n    })\n\n    const result = `${nums[0]}${nums[nums.length - 1]}`.toString()\n\n    return parseInt(result);\n  });\n\n  return numbers.reduce((acc, current) => {\n    return acc + current;\n  }, 0);\n};\n\n\nconst part2 = (rawInput: string) => {\n  const input = parseInput(rawInput);\n\n  const lines = input.split(\"\\n\");\n  const numbers = lines.map((line) => {\n    const chars = line.split(\"\");\n    const nums: number[] = []\n\n    chars.forEach((char, index) => {\n      if (!Number.isNaN(parseInt(char))) {\n        nums.push(parseInt(char))\n        return;\n      } else {\n        const substring = line.substring(index)\n\n        if (substring.indexOf(\"one\") === 0) {\n          nums.push(1)\n        }\n        else if (substring.indexOf(\"two\") === 0) {\n          nums.push(2)\n        }\n        else if (substring.indexOf(\"three\") === 0) {\n          nums.push(3)\n        }\n        else if (substring.indexOf(\"four\") === 0) {\n          nums.push(4)\n        }\n        else if (substring.indexOf(\"five\") === 0) {\n          nums.push(5)\n        }\n        else if (substring.indexOf(\"six\") === 0) {\n          nums.push(6)\n        }\n        else if (substring.indexOf(\"seven\") === 0) {\n          nums.push(7)\n        }\n        else if (substring.indexOf(\"eight\") === 0) {\n          nums.push(8)\n        }\n        else if (substring.indexOf(\"nine\") === 0) {\n          nums.push(9)\n        }\n      }\n    })\n  \n    const result = `${nums[0]}${nums[nums.length - 1]}`.toString()\n\n    return parseInt(result);\n  });\n\n  return numbers.reduce((acc, current) => {\n    return acc + current;\n  }, 0);\n};\n\nrun({\n  part1: {\n    tests: [\n      {\n        input: `1abc2\npqr3stu8vwx\na1b2c3d4e5f\ntreb7uchet`,\n        expected: 142,\n      },\n    ],\n    solution: part1,\n  },\n  part2: {\n    tests: [\n      {\n        input: `two1nine\neightwothree\nabcone2threexyz\nxtwone3four\n4nineeightseven2\nzoneight234\n7pqrstsixteen`,\n        expected: 281,\n      },\n    ],\n    solution: part2,\n  },\n  trimTestInputs: true,\n  onlyTests: false,\n});\n"],
  "mappings": "AAAA,OAAO,SAAS;AAEhB,MAAM,aAAa,CAAC,aAAqB;AAEzC,MAAM,QAAQ,CAAC,aAAqB;AAClC,QAAM,QAAQ,WAAW,QAAQ;AAEjC,QAAM,QAAQ,MAAM,MAAM,IAAI;AAC9B,QAAM,UAAU,MAAM,IAAI,CAAC,SAAS;AAClC,UAAM,QAAQ,KAAK,MAAM,EAAE;AAC3B,UAAM,OAAiB,CAAC;AAExB,UAAM,QAAQ,UAAQ;AACpB,UAAI,CAAC,OAAO,MAAM,SAAS,IAAI,CAAC,GAAG;AACjC,aAAK,KAAK,SAAS,IAAI,CAAC;AAAA,MAC1B;AAAA,IACF,CAAC;AAED,UAAM,SAAS,GAAG,KAAK,KAAK,KAAK,KAAK,SAAS,KAAK,SAAS;AAE7D,WAAO,SAAS,MAAM;AAAA,EACxB,CAAC;AAED,SAAO,QAAQ,OAAO,CAAC,KAAK,YAAY;AACtC,WAAO,MAAM;AAAA,EACf,GAAG,CAAC;AACN;AAGA,MAAM,QAAQ,CAAC,aAAqB;AAClC,QAAM,QAAQ,WAAW,QAAQ;AAEjC,QAAM,QAAQ,MAAM,MAAM,IAAI;AAC9B,QAAM,UAAU,MAAM,IAAI,CAAC,SAAS;AAClC,UAAM,QAAQ,KAAK,MAAM,EAAE;AAC3B,UAAM,OAAiB,CAAC;AAExB,UAAM,QAAQ,CAAC,MAAM,UAAU;AAC7B,UAAI,CAAC,OAAO,MAAM,SAAS,IAAI,CAAC,GAAG;AACjC,aAAK,KAAK,SAAS,IAAI,CAAC;AACxB;AAAA,MACF,OAAO;AACL,cAAM,YAAY,KAAK,UAAU,KAAK;AAEtC,YAAI,UAAU,QAAQ,KAAK,MAAM,GAAG;AAClC,eAAK,KAAK,CAAC;AAAA,QACb,WACS,UAAU,QAAQ,KAAK,MAAM,GAAG;AACvC,eAAK,KAAK,CAAC;AAAA,QACb,WACS,UAAU,QAAQ,OAAO,MAAM,GAAG;AACzC,eAAK,KAAK,CAAC;AAAA,QACb,WACS,UAAU,QAAQ,MAAM,MAAM,GAAG;AACxC,eAAK,KAAK,CAAC;AAAA,QACb,WACS,UAAU,QAAQ,MAAM,MAAM,GAAG;AACxC,eAAK,KAAK,CAAC;AAAA,QACb,WACS,UAAU,QAAQ,KAAK,MAAM,GAAG;AACvC,eAAK,KAAK,CAAC;AAAA,QACb,WACS,UAAU,QAAQ,OAAO,MAAM,GAAG;AACzC,eAAK,KAAK,CAAC;AAAA,QACb,WACS,UAAU,QAAQ,OAAO,MAAM,GAAG;AACzC,eAAK,KAAK,CAAC;AAAA,QACb,WACS,UAAU,QAAQ,MAAM,MAAM,GAAG;AACxC,eAAK,KAAK,CAAC;AAAA,QACb;AAAA,MACF;AAAA,IACF,CAAC;AAED,UAAM,SAAS,GAAG,KAAK,KAAK,KAAK,KAAK,SAAS,KAAK,SAAS;AAE7D,WAAO,SAAS,MAAM;AAAA,EACxB,CAAC;AAED,SAAO,QAAQ,OAAO,CAAC,KAAK,YAAY;AACtC,WAAO,MAAM;AAAA,EACf,GAAG,CAAC;AACN;AAEA,IAAI;AAAA,EACF,OAAO;AAAA,IACL,OAAO;AAAA,MACL;AAAA,QACE,OAAO;AAAA;AAAA;AAAA;AAAA,QAIP,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,UAAU;AAAA,EACZ;AAAA,EACA,OAAO;AAAA,IACL,OAAO;AAAA,MACL;AAAA,QACE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOP,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,UAAU;AAAA,EACZ;AAAA,EACA,gBAAgB;AAAA,EAChB,WAAW;AACb,CAAC;",
  "names": []
}
